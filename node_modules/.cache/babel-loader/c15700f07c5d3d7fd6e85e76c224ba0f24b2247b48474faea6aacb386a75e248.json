{"ast":null,"code":"export default class Norms {\n  // Insert an article\n  static Euclidean_Norm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_Norm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Inifinity_norm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Inifinity_norm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static one_norm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/one_norm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Manhattan_Norm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_Norm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Euclidean_VNorm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_VNorm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Inifinity_VNorm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Inifinity_VNorm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Lp_Norm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Lp_Norm`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n}","map":{"version":3,"names":["Norms","Euclidean_Norm","content","fetch","headers","body","JSON","stringify","then","response","json","catch","error","console","log","Inifinity_norm","one_norm","Manhattan_Norm","Euclidean_VNorm","Inifinity_VNorm","Lp_Norm"],"sources":["D:/ReactProjects/Math-calculator/math-calculator/src/sellami_components/api/Norms.js"],"sourcesContent":["export default class Norms {\r\n    // Insert an article\r\n    static Euclidean_Norm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_Norm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Inifinity_norm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Inifinity_norm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static one_norm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/one_norm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Manhattan_Norm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_Norm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Euclidean_VNorm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_VNorm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Inifinity_VNorm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Inifinity_VNorm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Lp_Norm(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Lp_Norm`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}