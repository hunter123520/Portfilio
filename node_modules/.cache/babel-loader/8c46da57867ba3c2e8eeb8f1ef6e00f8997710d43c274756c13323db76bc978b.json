{"ast":null,"code":"export default class Echelon {\n  static Gaussian_Elm(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Gaussian_Elm`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Basis(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Basis`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Gram_Shmidt(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Gram_Shmidt`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Kernel(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Kernel`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Rank(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Rank`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Particular_Solution(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Particular_Solution`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static General_solution(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/General_solution`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static LU_Solv(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/LU_Solv`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Eigenvalues_and_Eigenvectors(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Eigenvalues_and_Eigenvectors`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n}","map":{"version":3,"names":["Echelon","Gaussian_Elm","content","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","log","Basis","Gram_Shmidt","Kernel","Rank","Particular_Solution","General_solution","LU_Solv","Eigenvalues_and_Eigenvectors"],"sources":["D:/ReactProjects/Math-calculator/math-calculator/src/sellami_components/api/Echelon.js"],"sourcesContent":["export default class Echelon {\r\n  static Gaussian_Elm(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/Gaussian_Elm`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static Basis(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/Basis`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static Gram_Shmidt(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/Gram_Shmidt`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static Kernel(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/Kernel`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  static Rank(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/Rank`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static Particular_Solution(content) {\r\n    return fetch(\r\n      `https://easy-algebra-backend.onrender.com/Particular_Solution`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(content),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static General_solution(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/General_solution`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static LU_Solv(content) {\r\n    return fetch(`https://easy-algebra-backend.onrender.com/LU_Solv`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(content),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n  static Eigenvalues_and_Eigenvectors(content) {\r\n    return fetch(\r\n      `https://easy-algebra-backend.onrender.com/Eigenvalues_and_Eigenvectors`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(content),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}