{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\Hackathon_Project\\\\main\\\\src\\\\Components\\\\ChatComp.jsx\",\n  _s = $RefreshSig$();\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../Styles/ChatComp.css';\nimport { Avatar } from \"@mui/material\";\nimport { ChatBox, ReceiverMessage, SenderMessage } from \"mui-chat-box\";\nimport TextField from '@mui/material/TextField';\nimport { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from '@mui/icons-material/Send';\nimport APIService from \"../Api/APIService\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatComp() {\n  _s();\n  const [text, setText] = useState(\"bla bla\");\n  const [output, setoutput] = useState(\"\");\n  const [waiting, setWaiting] = useState(false);\n  const [answer, setAnswer] = useState([]);\n  const [questions, setquestions] = useState([]);\n  const handleSubmit = question => {\n    setWaiting(true);\n    console.log(question);\n    APIService.chat({\n      question\n    }).then(response => {\n      setoutput(response[\"output\"]);\n      setWaiting(false);\n      setAnswer([...answer, response[\"output\"]]);\n    }).catch(error => console.log(\"error\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Scrollerbox\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {\n        children: questions.map((element, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(SenderMessage, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: \"NA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 48\n              }, this),\n              children: element\n            }, \"send\" + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReceiverMessage, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: \"KS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 50\n              }, this),\n              children: output === \"\" && !waiting ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: waiting && i == questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex flex-column justify-content-center align-items-center p-4\",\n                  style: {\n                    gap: \"15px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this) : answer[i]\n              }, void 0, false)\n            }, \"recieve\" + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-center align-center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"BJOSS\",\n        id: \"filled-basic\",\n        label: \"Filled\",\n        variant: \"filled\",\n        value: text,\n        onChange: target => {\n          setText(target.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Buttonqsd\",\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 76\n        }, this),\n        onClick: () => {\n          setquestions([...questions, text]);\n          handleSubmit(text);\n          setText(\"\");\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatComp, \"YWKicdVH0kdTMGIDJ+0/JK6plHg=\");\n_c = ChatComp;\nexport default ChatComp;\nvar _c;\n$RefreshReg$(_c, \"ChatComp\");","map":{"version":3,"names":["Avatar","ChatBox","ReceiverMessage","SenderMessage","TextField","useEffect","useState","Button","SendIcon","APIService","CircularProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatComp","_s","text","setText","output","setoutput","waiting","setWaiting","answer","setAnswer","questions","setquestions","handleSubmit","question","console","log","chat","then","response","catch","error","children","className","map","element","i","avatar","fileName","_jsxFileName","lineNumber","columnNumber","length","style","gap","id","label","variant","value","onChange","target","endIcon","onClick","_c","$RefreshReg$"],"sources":["D:/ReactProjects/Hackathon_Project/main/src/Components/ChatComp.jsx"],"sourcesContent":["\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../Styles/ChatComp.css';\r\nimport { Avatar } from \"@mui/material\";\r\nimport { ChatBox, ReceiverMessage, SenderMessage } from \"mui-chat-box\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport APIService from \"../Api/APIService\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nfunction ChatComp(){\r\n    const [text,setText] = useState(\"bla bla\")\r\n    const [output, setoutput] = useState(\"\");\r\n    const [waiting, setWaiting] = useState(false);\r\n    const [answer, setAnswer] = useState([]);\r\n    const [questions,setquestions] = useState([]);\r\n    const handleSubmit = (question) => {\r\n        setWaiting(true);\r\n\r\n        console.log(question)\r\n\r\n        APIService.chat({question})\r\n          .then((response) => {\r\n            setoutput(response[\"output\"]);\r\n            setWaiting(false);\r\n            setAnswer([...answer,response[\"output\"]])\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"Scrollerbox\">\r\n            <ChatBox>\r\n                {\r\n                    questions.map((element,i) => {\r\n               \r\n                        return (<>\r\n                        <SenderMessage avatar={<Avatar>NA</Avatar>} key={\"send\"+i}>\r\n                            {element}\r\n                        </SenderMessage>\r\n                        <ReceiverMessage avatar={<Avatar>KS</Avatar>} key={\"recieve\"+i}>\r\n                        {output === \"\" && !waiting ? (\r\n                                <></>\r\n                            ) : (\r\n                                <>\r\n                                \r\n                                {waiting && i==questions.length-1? (\r\n                                    <div\r\n                                    className=\"d-flex flex-column justify-content-center align-items-center p-4\"\r\n                                    style={{ gap: \"15px\" }}\r\n                                >\r\n                                    <CircularProgress />\r\n                                    {/* <span>This may take some time, please be patient</span> */}\r\n                                </div>\r\n                                ) : (\r\n                                    answer[i]\r\n                                )}\r\n                                </>\r\n                            )}\r\n                                    </ReceiverMessage>\r\n                                    </>)\r\n                                })\r\n                            }\r\n            </ChatBox>\r\n            </div>\r\n            <div className=\"d-flex flex-row justify-content-center align-center\">\r\n                <TextField className=\"BJOSS\" id=\"filled-basic\" label=\"Filled\" variant=\"filled\" value={text} onChange={(target)=>{\r\n                    setText(target.target.value)\r\n                }}/>\r\n                <Button className=\"Buttonqsd\" variant=\"contained\" endIcon={<SendIcon />} onClick={() => {\r\n                        setquestions([...questions,text])\r\n                        handleSubmit(text);\r\n                        setText(\"\")\r\n                        \r\n                    }}>\r\n                    Send\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatComp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}