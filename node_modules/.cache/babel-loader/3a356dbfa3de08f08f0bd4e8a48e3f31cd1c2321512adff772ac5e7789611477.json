{"ast":null,"code":"export default class Distance {\n  // Insert an article\n  static Manhattan_Distance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_Distance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Euclidean_Distance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_Distance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Infinity_Distance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Infinity_Distance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Manhattan_VDistance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_VDistance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Euclidean_VDistance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_VDistance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n  static Infinity_VDistance(content) {\n    return fetch(`https://easy-algebra-backend.onrender.com/Infinity_VDistance`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n}","map":{"version":3,"names":["Distance","Manhattan_Distance","content","fetch","headers","body","JSON","stringify","then","response","json","catch","error","console","log","Euclidean_Distance","Infinity_Distance","Manhattan_VDistance","Euclidean_VDistance","Infinity_VDistance"],"sources":["D:/ReactProjects/Hackathon_Project/main/src/sellami_components/api/Distance.js"],"sourcesContent":["export default class Distance {\r\n    // Insert an article\r\n    static Manhattan_Distance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_Distance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Euclidean_Distance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_Distance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Infinity_Distance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Infinity_Distance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Manhattan_VDistance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Manhattan_VDistance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Euclidean_VDistance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Euclidean_VDistance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n    static Infinity_VDistance(content) {\r\n        return fetch(`https://easy-algebra-backend.onrender.com/Infinity_VDistance`, {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(content)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n}"],"mappings":"AAAA,eAAe,MAAMA,QAAQ,CAAC;EAC1B;EACA,OAAOC,kBAAkBA,CAACC,OAAO,EAAE;IAC/B,OAAOC,KAAK,CAAE,8DAA6D,EAAE;MACrE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EACA,OAAOG,kBAAkBA,CAACb,OAAO,EAAE;IAC/B,OAAOC,KAAK,CAAE,8DAA6D,EAAE;MACrE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EACA,OAAOI,iBAAiBA,CAACd,OAAO,EAAE;IAC9B,OAAOC,KAAK,CAAE,6DAA4D,EAAE;MACpE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EACA,OAAOK,mBAAmBA,CAACf,OAAO,EAAE;IAChC,OAAOC,KAAK,CAAE,+DAA8D,EAAE;MACtE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EACA,OAAOM,mBAAmBA,CAAChB,OAAO,EAAE;IAChC,OAAOC,KAAK,CAAE,+DAA8D,EAAE;MACtE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;EACA,OAAOO,kBAAkBA,CAACjB,OAAO,EAAE;IAC/B,OAAOC,KAAK,CAAE,8DAA6D,EAAE;MACrE,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}