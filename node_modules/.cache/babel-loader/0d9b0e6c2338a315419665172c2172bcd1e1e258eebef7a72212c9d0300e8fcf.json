{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\Hackathon_Project\\\\main\\\\src\\\\Pages\\\\Recycle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../Styles/Recycle.css\";\nimport Uploader from '../Components/Uploader';\nimport APIService from '../Api/APIService';\nimport { CircularProgress } from \"@mui/material\";\nimport Container from 'react-bootstrap/Container';\nimport battery from \"../Images/battery.jfif\";\nimport biological from \"../Images/biological.jfif\";\nimport brownglass from \"../Images/brown-glass.jfif\";\nimport cardboard from \"../Images/cardboard.jfif\";\nimport clothes from \"../Images/clothes.jfif\";\nimport greenglass from \"../Images/green-glass.jfif\";\nimport mettal from \"../Images/mettal.jfif\";\nimport paper from \"../Images/paper.jfif\";\nimport plastic from \"../Images/plastic.jfif\";\nimport shoes from \"../Images/shoes.jfif\";\nimport trash from \"../Images/trash.jfif\";\nimport whiteglass from \"../Images/white-glass.jfif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recycle = () => {\n  _s();\n  const [img, setImg] = useState([]);\n  const [output, setoutput] = useState(\"\");\n  const [waiting, setWaiting] = useState(false);\n  const [question, setquestion] = useState(\"what to do with plastic garbage\");\n  const handleSubmit = () => {\n    setWaiting(true);\n    APIService.recycle({\n      question\n    }).then(response => {\n      setoutput(response[\"output\"]);\n      setWaiting(false);\n      console.log(response);\n    }).catch(error => console.log(\"error\", error));\n  };\n  const handleReset = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-around errorContainer\",\n      children: /*#__PURE__*/_jsxDEV(Uploader, {\n        handleChange: file => {\n          //   var fr = new FileReader();\n          //   fr.onload = function () {\n          //     TextUpdate(fr.result);\n          //   };\n\n          //   fr.readAsText(file);\n          handleSubmit();\n        },\n        handleCancel: file => {},\n        name: \"file\",\n        types: [\"png\", \"jpg\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), output === \"\" && !waiting ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: waiting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center p-4\",\n        style: {\n          gap: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This may take some time, please be patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-title titlec\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Garbage Analysing Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: \"xl\",\n          className: \"container desc1 d-flex justify-content-within align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgcont w-50\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"layer \",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img1\",\n                src: res,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desco1 w-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"descotitle\",\n              children: [\"Find the type of your \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#178a9f\"\n                },\n                children: \"Garbage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"descocontent\",\n              children: [\"Ever stare at a piece of trash and wonder, \\\"Can this be recycled?\\\" We've all been there. That's why we created a one-of-a-kind AI model to help you quickly and accurately identify your garbage type!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 22\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 32\n              }, this), \"Simply snap a picture of your item (or enter a description), and our intelligent system will analyze it to determine the category. It's that easy! Our AI can identify a wide range of garbage types, By using our tool, you can: Reduce landfill waste, Increase recycling rates, Improve your environmental impact, Become a recycling pro!.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 31\n              }, this), \"Stop the confusion! Find your garbage type today and take the first step towards a more sustainable future.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(Recycle, \"nYXGZCoBryy4Fb1+WZXlvRzk23Y=\");\n_c = Recycle;\nexport default Recycle;\nvar _c;\n$RefreshReg$(_c, \"Recycle\");","map":{"version":3,"names":["React","useState","useEffect","Uploader","APIService","CircularProgress","Container","battery","biological","brownglass","cardboard","clothes","greenglass","mettal","paper","plastic","shoes","trash","whiteglass","jsxDEV","_jsxDEV","Fragment","_Fragment","Recycle","_s","img","setImg","output","setoutput","waiting","setWaiting","question","setquestion","handleSubmit","recycle","then","response","console","log","catch","error","handleReset","children","className","handleChange","file","handleCancel","name","types","fileName","_jsxFileName","lineNumber","columnNumber","style","gap","height","fluid","src","res","alt","color","_c","$RefreshReg$"],"sources":["D:/ReactProjects/Hackathon_Project/main/src/Pages/Recycle.jsx"],"sourcesContent":["import React , {useState,useEffect} from 'react'\r\n\r\nimport \"../Styles/Recycle.css\"\r\nimport Uploader from '../Components/Uploader'\r\nimport APIService from '../Api/APIService'\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport battery from \"../Images/battery.jfif\"\r\nimport biological from \"../Images/biological.jfif\"\r\nimport brownglass from \"../Images/brown-glass.jfif\"\r\nimport cardboard from \"../Images/cardboard.jfif\"\r\nimport clothes from \"../Images/clothes.jfif\"\r\nimport greenglass from \"../Images/green-glass.jfif\"\r\nimport mettal from \"../Images/mettal.jfif\"\r\nimport paper from \"../Images/paper.jfif\"\r\nimport plastic from \"../Images/plastic.jfif\"\r\nimport shoes from \"../Images/shoes.jfif\"\r\nimport trash from \"../Images/trash.jfif\"\r\nimport whiteglass from \"../Images/white-glass.jfif\"\r\n\r\nconst Recycle = () => {\r\n    const [img,setImg] = useState([]);\r\n    const [output, setoutput] = useState(\"\");\r\n    const [waiting, setWaiting] = useState(false);\r\n    const [question,setquestion] = useState(\"what to do with plastic garbage\")\r\n    const handleSubmit = () => {\r\n        setWaiting(true);\r\n        APIService.recycle({question})\r\n          .then((response) => {\r\n            setoutput(response[\"output\"]);\r\n            setWaiting(false);\r\n            console.log(response)\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n      };\r\n      const handleReset = () => {\r\n      }\r\n  return (\r\n    <>\r\n    <div className='d-flex justify-content-around errorContainer'>\r\n        <Uploader\r\n        handleChange={(file) => {\r\n        //   var fr = new FileReader();\r\n        //   fr.onload = function () {\r\n        //     TextUpdate(fr.result);\r\n        //   };\r\n\r\n        //   fr.readAsText(file);\r\n        handleSubmit()\r\n        \r\n        }}\r\n        handleCancel={(file) => {}}\r\n        name={\"file\"}\r\n        types={[\"png\",\"jpg\"]}\r\n      />\r\n        \r\n    </div>\r\n    {output === \"\" && !waiting ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          \r\n          {waiting ? (\r\n             <div\r\n             className=\"d-flex flex-column justify-content-center align-items-center p-4\"\r\n             style={{ gap: \"15px\" }}\r\n           >\r\n             <CircularProgress />\r\n             <span>This may take some time, please be patient</span>\r\n           </div>\r\n          ) : (\r\n            <div>\r\n                <div className='intro-title titlec'>\r\n                    <span>Garbage Analysing Results</span>\r\n                </div>\r\n                <div style={{height:50}}></div>\r\n                <Container fluid=\"xl\" className='container desc1 d-flex justify-content-within align-items-center' >\r\n                <div className='imgcont w-50' >\r\n                <div className=\"layer \">\r\n                    <img className='img1' src={res} alt=\"\" /> \r\n                </div>\r\n                \r\n                    \r\n                </div>\r\n                <div className='desco1 w-50'>\r\n                    <div className='descotitle'>\r\n                    Find the type of your <span style={{color: \"#178a9f\"}}>Garbage</span> \r\n                    </div>\r\n                    <div className='descocontent'>\r\n                    Ever stare at a piece of trash and wonder, \"Can this be recycled?\" We've all been there. That's why we created a one-of-a-kind AI model to help you quickly and accurately identify your garbage type!\r\n\r\n\r\n                     <br></br> <br></br>\r\n                     Simply snap a picture of your item (or enter a description), and our intelligent system will analyze it to determine the category. It's that easy!\r\n                     Our AI can identify a wide range of garbage types, By using our tool, you can:\r\n                    Reduce landfill waste, \r\n                    Increase recycling rates, \r\n                    Improve your environmental impact, \r\n                    Become a recycling pro!.\r\n                    <br></br> <br></br>\r\n                    Stop the confusion! Find your garbage type today and take the first step towards a more sustainable future.\r\n                    </div>\r\n                </div>\r\n                </Container>\r\n                <div>\r\n                {output}\r\n            </div>\r\n            </div>\r\n           \r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Recycle"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}