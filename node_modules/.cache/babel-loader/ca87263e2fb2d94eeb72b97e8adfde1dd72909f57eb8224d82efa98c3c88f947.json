{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\Hackathon_Project\\\\main\\\\src\\\\sellami_components\\\\Inputs\\\\Checker.jsx\";\nimport React from 'react';\nimport { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checker = _ref => {\n  let {\n    label,\n    check,\n    HandleCheckchange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: check,\n          onChange: () => {\n            if (check === false) {\n              HandleCheckchange(true);\n            } else {\n              HandleCheckchange(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 36\n        }, this),\n        label: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Checker;\nexport default Checker;\nvar _c;\n$RefreshReg$(_c, \"Checker\");","map":{"version":3,"names":["React","FormGroup","FormControlLabel","Checkbox","jsxDEV","_jsxDEV","Checker","_ref","label","check","HandleCheckchange","children","control","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactProjects/Hackathon_Project/main/src/sellami_components/Inputs/Checker.jsx"],"sourcesContent":["import React from 'react'\r\nimport { FormGroup ,FormControlLabel,Checkbox} from '@mui/material';\r\nconst Checker = ({label,check,HandleCheckchange}) => {\r\n  return (\r\n    <div>\r\n        <FormGroup>\r\n        <FormControlLabel control={<Checkbox  checked={check} onChange={()=>{\r\n          if(check === false){\r\n            HandleCheckchange(true)\r\n          }else{\r\n            HandleCheckchange(false)\r\n          }\r\n        }}/>} label={label} />\r\n        </FormGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checker"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,gBAAgB,EAACC,QAAQ,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpE,MAAMC,OAAO,GAAGC,IAAA,IAAqC;EAAA,IAApC;IAACC,KAAK;IAACC,KAAK;IAACC;EAAiB,CAAC,GAAAH,IAAA;EAC9C,oBACEF,OAAA;IAAAM,QAAA,eACIN,OAAA,CAACJ,SAAS;MAAAU,QAAA,eACVN,OAAA,CAACH,gBAAgB;QAACU,OAAO,eAAEP,OAAA,CAACF,QAAQ;UAAEU,OAAO,EAAEJ,KAAM;UAACK,QAAQ,EAAEA,CAAA,KAAI;YAClE,IAAGL,KAAK,KAAK,KAAK,EAAC;cACjBC,iBAAiB,CAAC,IAAI,CAAC;YACzB,CAAC,MAAI;cACHA,iBAAiB,CAAC,KAAK,CAAC;YAC1B;UACF;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAE;QAACV,KAAK,EAAEA;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAAC,EAAA,GAdKb,OAAO;AAgBb,eAAeA,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}